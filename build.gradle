plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'nebula.optional-base' version '3.0.3'
    id 'com.adarshr.test-logger' version '3.2.0'
    id "io.freefair.lombok" version "6.5.0.3"
}

group 'com.ptsmods'
version '1.8.1'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.30', optional
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.39.2.0', optional
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.addBooleanOption("html5", true)
}

test {
    useJUnitPlatform()
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "mysqlw"
            from components.java

            pom {
                name = 'MySQLw'
                description = 'A wrapper for MySQL connections'
                url = 'https://github.com/PlanetTeamSpeakk/MySQLw'

                scm {
                    connection = 'scm:git:git://github.com/PlanetTeamSpeakk/MySQLw.git'
                    developerConnection = 'scm:git:git://github.com/PlanetTeamSpeakk/MySQLw.git'
                    url = 'https://github.com/PlanetTeamSpeakk/MySQLw'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/PlanetTeamSpeakk/MySQLw/main/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'PlanetTeamSpeak'
                        name = 'PlanetTeamSpeak'
                        email = 'PlanetTeamSpeakk@users.noreply.github.com'
                    }
                }
            }
        }
    }

    // Credentials are gotten from global gradle.properties file (user home/.gradle/gradle.properties)
    repositories {
        maven {
            // https://oss.sonatype.org
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            name = "MavenCentral"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials) {
                username ossrhUsername
                password ossrhPassword
            }
        }

        maven {
            name = "GitHubPackages"
            url = ghUrlRoot + "/MySQLw"
            credentials(PasswordCredentials) {
                username = ghUsername
                password = ghToken
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
